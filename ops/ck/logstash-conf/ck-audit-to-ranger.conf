input {
  kafka {
    bootstrap_servers => ["centos01:9092"]
    topics => ["clickhouse-audit"]
    codec => json
    client_id => "ck-audit-to-ranger"
    group_id => "ck-audit-to-ranger"
    add_field => { "branch" => "ranger" }
  }
}


filter {
  if [branch] == "ranger" {
    if [type] == "QueryStart" {
      drop {}
    }
    truncate {
      fields => "event_time_microseconds"
      length_bytes => 23
    }
    date {
      match => [ "event_time_microseconds", "yyyy-MM-dd HH:mm:ss.SSS" ]
      target => "evtTime"
    }
    mutate {
      remove_field => [
        "@timestamp",
        "@version",
        "event_time",
        "event_time_microseconds",
        "query_start_time",
        "query_start_time_microseconds",
        "event_date",
        "query_duration_ms",
        "stack_trace",
        "initial_port",
        "query_id",
        "used_functions",
        "used_table_functions",
        "quota_key",
        "used_data_type_families",
        "used_database_engines",
        "used_formats",
        "os_user",
        "user",
        "ecs",
        "client_version_patch",
        "normalized_query_hash",
        "client_version_major",
        "client_version_minor",
        "log_comment",
        "interface",
        "is_initial_query",
        "log",
        "memory_usage",
        "used_storages",
        "input",
        "Settings.Names", "Settings.Values",
        "read_rows", "written_rows", "result_rows", "read_bytes", "written_bytes", "result_bytes",
        "thread_ids",
        "http_method",
        "forwarded_for",
        "revision",
        "http_referer",
        "port",
        "client_revision",
        "tags",
        "used_dictionaries",
        "used_aggregate_functions",
        "used_aggregate_function_combinators",
        "ProfileEvents.Values", "ProfileEvents.Names",
        "fields"
      ]
    }
    mutate {
      rename => {
        "query_kind" => "access"
        "initial_query_id" => "sess"
        "initial_user" => "reqUser"
        "query" => "reqData"
        "initial_address" => "cliIP"
        "agent_host" => "agentHost"
      }
    }
    mutate {
      add_field => {
        "agent" => "ClickHouse"
        "logType" => "RangerAudit"
        "cluster" => ""
        "zoneName" => ""
        "reason" => ""
        "policyVersion" => 1
        "policy" => 0
        "seq_num" => 1
        "result" => 1
        "event_count" => 1
        "event_dur_ms" => 0
        "tags" => [ "null" ]
        "action" => "%{access}"
        "id" => "%{sess}"
        "repoType" => 150
        "repo" => "clickhouse"
        "enforcer" => "ranger-acl"
      }
    }
    mutate {
      convert => {
        "repoType" => "integer"
        "result" => "integer"
        "policyVersion" => "integer"
        "policy" => integer
        "seq_num" => "integer"
        "event_count" => "integer"
        "event_dur_ms" => "integer"
      }
    }
    if [exception_code] == 497 {
      mutate {
        update => { "result" => 0 }
      }
    }
  }
}
output {
 if [branch] == "ranger" { 
   elasticsearch {
     hosts => ["centos00:19200"]
     index =>  "ranger-audit"
   }
 }
}
